{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <font color=\"blue\"> MBA em Ciência de Dados</font>\n",
    "# <font color=\"blue\">Programação para Ciência de Dados</font>\n",
    "\n",
    "## <font color=\"blue\">Avaliação Final</font>\n",
    "**Material Produzido por Luis Gustavo Nonato**<br>\n",
    "**Cemeai - ICMC/USP São Carlos**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<font color='red'>**ATENÇÃO:** Quando terminar o exame, você deve fazer um \"upload\" do notebook no _moodle_</font>."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Para responder as questões abaixo será necessário fazer uso do arquivo <font style=\"font-family: monaco\">emendas_p2023.csv</font> disponível para download no _moodle_. O arquivo contém dados sobre emendas parlamentares apresentadas em 2023. Dentre as colunas do conjunto de dados, as que serão relevantes para esta avaliação são:\n",
    "- **Tipo de Emenda**: tipo de emenda\n",
    "- **Autor da emenda**: parlamentar autor da emenda\n",
    "- **Localidade do gasto**: localidade para onde o valor foi enviado\n",
    "- **Numero da emenda**: número associado a emenda para controle interno\n",
    "- **Valor empenhado**: valor empenhado mas não necessariamente pago\n",
    "- **Valor pago**: valor realmente pago"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Questão 1 (2 pontos)\n",
    "Considerando os dados contidos no arquivo <font style=\"font-family: monaco\">emendas_p2023.csv</font>:\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### a) (1 ponto)\n",
    "Carregue o arquivo <font style=\"font-family: monaco\">emendas_p2023.csv</font> e armazena em um DataFrame. Imprima as 10 primeiras linhas do DataFrame e os rótulos das colunas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Solucao"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### c) (1 ponto)\n",
    "A coluna _'Numero da emenda'_ correponde a um código de controle interno do parlamento, sem utilidade para as analises que serão feitas a seguir, portanto deve ser eliminada. Elimine a coluna _'Numero da emenda'_ do DataFrame."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Solucao"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Questão 2 (2 pontos)\n",
    "Verifique quantos tipos de emendas diferentes exitem na base (coluna _'Tipo de Emenda'_) e aponte qual o tipo de emenda que mais aparece na base."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Solucao"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Questão 3 (3 pontos)\n",
    "#### a) (1 ponto) \n",
    "\n",
    "Encontre os três parlamentares (coluna _'Autor da emenda'_) que apresentaram o maior número de emendas em 2023."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Solucao"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### b) (2 pontos) \n",
    "\n",
    "Para cada um dos três parlamentares encontrados acima, liste qual foi o valor empenhado (coluna _'Valor empenhado'_) para as emendas por eles apresentadas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Solucao"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Questão 4 (3 pontos)\n",
    "Encontre as cinco localidades (coluna _'Localidade do gasto'_) que receberam os maiores valores pagos (soma da coluna _'Valor pago'_).\n",
    "\n",
    "**Dica**: Use <font color='blue'>groupby</font> com redução de soma e ordene o resultado em ordem decrescente."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "local_gasto = df.groupby('Localidade do gasto')['Valor pago'].sum()\n",
    "\n",
    "print(local_gasto.sort_values(ascending=False).iloc[:6])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
